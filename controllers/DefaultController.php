<?php

namespace wdmg\pages\controllers;

use Yii;
use yii\web\Controller;
use yii\web\NotFoundHttpException;
use wdmg\pages\models\Pages;

/**
 * DefaultController implements actions for Pages model.
 */
class DefaultController extends Controller
{


    /**
     * {@inheritdoc}
     */
    public function beforeAction($action)
    {

        // Set a default layout
        $this->layout = $this->module->pagesLayout;

        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    /**
     * View of page.
     * If the page was found and it has a route setup that does not match the current route
     * of the request, an NotFoundHttpException will be thrown.
     * If the page does not have a route, such a check is not performed and the page can be
     * displayed if such a route is allowed as the default setting in the module.
     *
     * @param string $page aliases of searching page.
     * @return mixed
     * @see Pages::$alias
     */
    public function actionIndex($page, $route = null)
    {

        // Check probably need redirect to new page URL
        if (Yii::$app->redirects->check(Yii::$app->request->getUrl()))
            return Yii::$app->redirects->check(Yii::$app->request->getUrl());

        // Separate route from page alias from request URL
        if (is_null($route) && preg_match('/^([\/]+[A-Za-z0-9_\-\_\/]+[\/])*([A-Za-z0-9_\-\_]*)/i', Yii::$app->request->url,$matches)) {
            if ($page == $matches[2])
                $route = rtrim($matches[1], '/');
        }

        // If route is root
        if (empty($route))
            $route = '/';

        // Search page model with alias
        $model = $this->findModel($page);

        // Checking requested route with page route if set
        if (isset($model->route)) {
            if ($model->route !== $route) {
                throw new NotFoundHttpException();
            }
        }

        // Set a custom layout to render page
        if (isset($model->layout))
            $this->layout = $model->layout;

        return $this->render('index', [
            'model' => $model,
            'route' => $route
        ]);
    }

    /**
     * Finds the Page model based on alias value.
     * If the model is not found, a 404 HTTP exception will be thrown.
     *
     * @param string $alias
     * @return Page model
     * @throws NotFoundHttpException if the model not exist or not published
     */
    protected function findModel($alias)
    {
        $model = Pages::find()->where([
            'alias' => $alias,
            'status' => 1,
        ])->one();

        if (!is_null($model))
            return $model;
        else
            throw new NotFoundHttpException();

    }
}
